var _isRun = false;

var Game = {
    Spec: function () {
        if (!modalCommonCheck()) {
            return;
        }

        try {
            if (typeof specification === 'undefined') {
                commonModalHandler("PC사용 조사 런처가 아직 로딩되지 않았습니다.");
                return;
            }

            specification.open($.GameNo, null, function () {

                commonModalHandlerToALink("PC 사양 조사를 시작하기 위해<br />[PC 사양확인 소프트웨어] 를 설치해 주세요.", "javascript: location.href='/Launcher/Specification';", "PC사양조사 클라이언트 설치");
                return;

            });
        } catch (e) {
            console.log(e);
        }

    },

    Exec: function () {

        if (_isRun == true) {
            return false;
        }

        _isRun = true;

        trackingCode('1_GameStartClick');

        $.ajax({
            url: '/Launcher/GameExec',
            type: 'POST',
            dataType: "json",
            async: false,
            success: function (data) {

                if (!jsonResultCommonCheck(data)) {
                    return;
                }

                //성공한 경우..
                if (data.code == 0) {

                    if (typeof launcher === 'undefined') {
                        commonModalHandler("런처가 아직 로딩되지 않았습니다.");
                        return;
                    }

                    if (launcher) {

                        launcher.open($.GameNo, null, function () {
                            gtag('event', 'click', {
                                'event_category': 'pre dl',
                                'event_label': 'obt'
                            });
                            commonModalHandlerToALink("게임을 시작하기 위해선 먼저<br/> STOVE 클라이언트 설치가 되어 있어야 합니다.", "/Launcher/Download", "STOVE 클라이언트 설치");
                            return;
                        });
                    } else {
                        commonModalHandler('런처를 실행할 수 없습니다.');
                        return;
                    }
                } else {
                    commonModalHandler(data.message);
                    return;
                }
            },
            error: function (e, r, h) {
                ajaxErrorHandler(e, r, h);
            },
            complete: function () {
                setTimeout(function () {
                    _isRun = false;
                }, 2000)
            }
        });
    },
};